<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmClose" xml:space="preserve">
    <value>Do you want to close this window?</value>
  </data>
  <data name="ConfirmStopAnalysis" xml:space="preserve">
    <value>Do you want to stop the analysis?</value>
  </data>
  <data name="ErrAbsolutePert" xml:space="preserve">
    <value>The absolute perturbation is lager than 0.0.</value>
  </data>
  <data name="ErrAnalysis" xml:space="preserve">
    <value>Fail to execute the robust analysis.</value>
  </data>
  <data name="ErrFindErrorJob" xml:space="preserve">
    <value>There are any error job. Do you want to show the result?</value>
  </data>
  <data name="ErrGenerationNumPositive" xml:space="preserve">
    <value>The number of generation is lager than 0.</value>
  </data>
  <data name="ErrInputReflect" xml:space="preserve">
    <value>There are invalid properties in execution parameters.</value>
  </data>
  <data name="ErrLoadParam" xml:space="preserve">
    <value>There are invalid properties in the selected parameter file.</value>
  </data>
  <data name="ErrNotCheckParam" xml:space="preserve">
    <value>Can't find the checked parameter for judgment.</value>
  </data>
  <data name="ErrNotEstimateFormulator" xml:space="preserve">
    <value>Can't find the formulator of estimation.</value>
  </data>
  <data name="ErrObservProp" xml:space="preserve">
    <value>Can't get the observed parameter. Please set at least one property.</value>
  </data>
  <data name="ErrorSAnalysis" xml:space="preserve">
    <value>Fail to execute the sensitivity analysis.</value>
  </data>
  <data name="ErrOutParam" xml:space="preserve">
    <value>There are invalid parameters. Please check Number of sample, Simulation Time or Check window size.</value>
  </data>
  <data name="ErrOutParamFile" xml:space="preserve">
    <value>Get the exception while the prameter file is output.</value>
  </data>
  <data name="ErrOverMax" xml:space="preserve">
    <value>The max number of input is over</value>
  </data>
  <data name="ErrParamProp1" xml:space="preserve">
    <value>Can't get the parameter of property. Please set at least one property.</value>
  </data>
  <data name="ErrParamProp2" xml:space="preserve">
    <value>Can't get the parameter of property. Please set at least two property.</value>
  </data>
  <data name="ErrParamPropEqual2" xml:space="preserve">
    <value>Parameter should be two data.</value>
  </data>
  <data name="ErrPopulationNumPositive" xml:space="preserve">
    <value>The numner of population is lager than 0.</value>
  </data>
  <data name="ErrPosValue" xml:space="preserve">
    <value>Number of sample, Simulation Time or Check window size should be positive number.</value>
  </data>
  <data name="ErrRandParam" xml:space="preserve">
    <value>Can't find the parameter as random parameter.</value>
  </data>
  <data name="ErrRelativePert" xml:space="preserve">
    <value>The relative perturbation is lager than 0.0.</value>
  </data>
  <data name="ErrSameAxis" xml:space="preserve">
    <value>The selected data on X axis is same as the one on Y axis.</value>
  </data>
  <data name="ErrSampleNumPositive" xml:space="preserve">
    <value>The number of samples is larger than 0,</value>
  </data>
  <data name="ErrSimTimeUnder" xml:space="preserve">
    <value>The simulation time is lager than 0.0.</value>
  </data>
  <data name="ErrSingular" xml:space="preserve">
    <value>Can not find the singular matrix. Please confirm whether the value of variable is set.</value>
  </data>
  <data name="ErrStepUnder" xml:space="preserve">
    <value>The step is lager than and equal 1.</value>
  </data>
  <data name="FinishBAnalysis" xml:space="preserve">
    <value>Finished to execute the bifurcation analysis.</value>
  </data>
  <data name="FinishPAnalysis" xml:space="preserve">
    <value>Finished to execute the parameter estimation.</value>
  </data>
  <data name="FinishRAnalysis" xml:space="preserve">
    <value>Finished to execute the robust analysis.</value>
  </data>
  <data name="FinishSAnalysis" xml:space="preserve">
    <value>Finished to execute the sensitivity analysis.</value>
  </data>
  <data name="MenuItemAnalysis" xml:space="preserve">
    <value>&amp;Analysis...</value>
  </data>
  <data name="MenuItemAnalysisWindow" xml:space="preserve">
    <value>&amp;Analysis...</value>
  </data>
  <data name="MenuItemBifurcationAnalysis" xml:space="preserve">
    <value>&amp;Bifurcation Analysis</value>
  </data>
  <data name="MenuItemParameterEstimation" xml:space="preserve">
    <value>&amp;Parameter Estimation</value>
  </data>
  <data name="MenuItemRobustAnalysis" xml:space="preserve">
    <value>&amp;Robust Analysis</value>
  </data>
  <data name="MenuItemSensitivityAnalysis" xml:space="preserve">
    <value>&amp;Sensitivity Analysis</value>
  </data>
  <data name="MenuItemStopAnalysis" xml:space="preserve">
    <value>Stop Analysis</value>
  </data>
  <data name="ReflectMenuText" xml:space="preserve">
    <value>Reflect</value>
  </data>
</root>